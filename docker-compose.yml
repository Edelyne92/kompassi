version: '2.2'
services:
  backend:
    build: backend
    init: true
    command: python manage.py docker_start
    ports:
      - 8000:8000
    links:
      - redis
      - postgres
    volumes:
      - ./backend:/usr/src/app
      - web-media:/usr/src/app/media
    environment: &environment
      PYTHONUNBUFFERED: 1
      DEBUG: 1
      BROKER_URL: redis://redis/1
      CACHE_URL: rediscache://redis/1
      ALLOWED_HOSTS: '*'
      MINIO_BUCKET_NAME: kompassi
      MINIO_ACCESS_KEY_ID: kompassi
      MINIO_SECRET_ACCESS_KEY: kompassi
      MINIO_ENDPOINT_URL: http://minio:9000
      OIDC_RSA_PRIVATE_KEY: "${OIDC_RSA_PRIVATE_KEY:-}"
  celery:
    build: backend
    init: true
    command: celery -A kompassi.celery_app:app worker
    links:
      - redis
      - postgres
    volumes:
      - ./backend:/usr/src/app:ro
    environment:
      <<: *environment
  frontend:
    profiles:
      - frontend
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    init: true
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/usr/src/app/src
    environment:
      NEXT_PUBLIC_KOMPASSI_BASE_URL: http://backend:8000
  postgres:
    # image: postgres
    build: backend/kompassi/sql/
    entrypoint: ["docker-entrypoint.sh"]
    command: ["postgres", "-c", "log_statement=all"]
    init: true
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kompassi
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: kompassi
  redis:
    image: redis
    init: true
    volumes:
      - redis-data:/data
  minio:
    image: minio/minio
    entrypoint: /usr/bin/env
    command: sh -c 'mkdir -p /data/kompassi && minio server /data --console-address ":9001"'
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: kompassi
      MINIO_ROOT_PASSWORD: kompassi

volumes:
  postgres-data: {}
  redis-data: {}
  minio-data: {}
  web-media: {}
